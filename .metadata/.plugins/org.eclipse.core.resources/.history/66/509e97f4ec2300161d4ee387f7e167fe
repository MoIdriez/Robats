/*
 * GamePad.h
 *
 *  Created on: 25 May 2016
 *      Author: midries
 */

#ifndef SRC_CONTROLENGINE_GAMEPAD_H_
#define SRC_CONTROLENGINE_GAMEPAD_H_

#define GAMEPAD_DEVNAME "/dev/input/js0"

#define GP_EVENT_BUTTON         0x01    /* button pressed/released */
#define GP_EVENT_AXIS           0x02    /* gamepad moved */
#define GP_EVENT_INIT           0x80    /* initial state of device */

#define GP_AXIS_MAX				32767	/* max axis value for this specific controller */
#define GP_AXIS_MIN				-32767 	/* min axis value for this specific controller */

/* These values can change depending on the gamepad used */
#define YAW 					0
#define THRUST 					1
#define ROLL 					2
#define PITCH 					5

/* I took these values from the Python client*/
#define CF_YAW_MAX				199
#define CF_YAW_MIN				-199
#define CF_THRUST_MAX			100
#define CF_THRUST_MIN			0
#define CF_ROLL_MAX				30
#define CF_ROLL_MIN				-30
#define CF_PITCH_MAX			30
#define CF_PITCH_MIN			-30

struct gp_event {
	unsigned int time;      /* event timestamp in milliseconds */
	short value;   /* value */
	unsigned char type;     /* event type */
	unsigned char number;   /* axis/button number */
};

struct gp_values {
	short yaw = 0;
	short roll = 0;
	short pitch = 0;
	short thrust = 0;
};

class GamePad {
public:
	virtual ~GamePad();
	int readValues(struct gp_values *gpv);
	GamePad();
private:
	short convert(short oldValue, short oldMin, short oldMax, short newMin, short newMax);
	int readEvent(struct gp_event *gpe);
	int gamepad_fd = -1;
};

#endif /* SRC_CONTROLENGINE_GAMEPAD_H_ */
