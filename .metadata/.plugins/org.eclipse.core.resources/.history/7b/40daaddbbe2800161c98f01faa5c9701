//============================================================================
// Name        : RobatsEngine.cpp
// Author      : Mohamed Idries
// Version     :
// Copyright   : Just use it for awesome stuff
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
// libcflie
#include "ControlEngine/GamePad.h"
#include "ControlEngine/AutoFlight.h"
#include "CrazyFlieEngine/CCrazyflie.h"
#include "CommunicationEngine/CrazyflieServer.h"

bool altHold = false; // just so that we set it once
bool gamepadEnabled = true;
bool autoflightEnabled = false;
struct gp_values gpv;
GamePad *gamepad = new GamePad();
AutoFlight *af = new AutoFlight();

void gamePadControl(CCrazyflie *cflieCopter, bool output = false, bool minimal =
		false) {
	gamepad->readValues(&gpv);
	cflieCopter->setThrust(gpv.thrust);
	cflieCopter->setRoll(gpv.roll);
	cflieCopter->setPitch(gpv.pitch);
	cflieCopter->setYaw(gpv.yaw);

	if (autoflightEnabled & gpv.althold) {
		if (!altHold) {
			af->setTargetAlt(cflieCopter->asl());
		}
		cflieCopter->setThrust(
				af->cycle(cflieCopter->asl(), cflieCopter->thrust()));
	} else {
		cflieCopter->setThrust(gpv.thrust);
	}

	if (output) {
		if (minimal) {
			cout << cflieCopter->thrust() << "," << cflieCopter->roll() << ","
					<< cflieCopter->pitch() << "," << cflieCopter->yaw()
					<< endl;
		} else {
			cout << "T: " << cflieCopter->thrust() << "\tR: "
					<< cflieCopter->roll() << "\tP: " << cflieCopter->pitch()
					<< "\tY: " << cflieCopter->yaw() << endl;
		}
	}
}

void logAcc(CCrazyflie *cflieCopter) {
	std::cout << cflieCopter->accX() << "," << cflieCopter->accY() << ","
			<< cflieCopter->accZ() << std::endl;
}
void logASL(CCrazyflie *cflieCopter) {
	cout << "Asl: " << cflieCopter->asl() << ", AslLong"
			<< cflieCopter->aslLong() << ", Pressure" << cflieCopter->pressure()
			<< ", Temperature" << cflieCopter->temperature() << endl;
}

void cfCycle(CCrazyflie *cflieCopter) {
	if (gamepadEnabled) {
		gamePadControl(cflieCopter);
	}
}

int main(int argc, char **argv) {
	CCrazyRadio *crRadio = new CCrazyRadio("radio://0/10/250K");
	if (crRadio->startRadio()) {
		CCrazyflie *cflieCopter = new CCrazyflie(crRadio);
		cflieCopter->setSendSetpoints(true);

		while (cflieCopter->cycle()) {

		}
		delete cflieCopter;
	} else {
		std::cerr << "Could not connect to dongle. Did you plug it in?"
				<< std::endl;
	}

	delete crRadio;
	return 0;
}
