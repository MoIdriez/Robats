=== ECLIPSE REFERENCE ROBATS LIBRARY === 

// For the linuxy approach copy 
// header to /usr/local/include/ or /usr/include/
// library to /usr/local/lib/ or /usr/lib/

1) You have to include your shared library path in the file /etc/ld.so.conf or create a file ending on .conf on the directory /etc/ld.so.conf.d that includes the path. Once you have done it run the config ldconfig as superuser.

// NOTE THIS IS NOT THE BEST APPROACH
// however it's an easy eclipsy way (I won't tell anyone)

1) Project Properties -> C/C++ General -> Paths and Symbols -> Includes -> GNU C++ -> Add -> Workspace -> Select Shared Library Include Folder 'Robats/include' -> OK
2) Project Properties -> C/C++ General -> Paths and Symbols -> Library Paths -> Add -> Workspace -> Select the Release folder -> OK
3) Project Properties -> C/C++ Build -> Settings -> Tool Settings -> GCC C++ Linker -> Libraries -> -l Add -> "Robats" -> OK
4) Run Configurations -> Environment -> New -> Variable = "LD_LIBRARY_PATH", Value = "${workspace_loc:/Robats/Release}" -> OK


=== FROM NEW FIRMWARE TO WORKING CRAZYFLIE ===

1) Build the project using the commands bellow
	make PLATFORM=CF1 DEBUG=1

	Error 1: Not a git repository
		I just went ahead and disabled the code that tried to update it self
		Go to the Makefile and on line 296 remove 'check_submodules'

2) Open Crazyflie client and flash the new bootloader


=== ADD PROXIMITY SENSOR TO WORKING CRAZYFLIE ===
Change the following files

1) drivers/interface/adc.h

after line 59: #define ADC_INTERNAL_VREF 1.20 add
	// Proximity sensor constant to get inches from volts given 2.8 VCC
	#define PROX_CON         0.00546875 

after line 74: This is in the struct __attribute__((packed))
	AdcPair vprox;

before the last line: #endif /* ADC_H_ */
	void proxSensorUpdate(AdcGroup* adcValues);

2) drivers/src/adc.c

after line 40: #include 'imu.h'
	#include "log.h"

after line 48: #define GPIO_VBAT        GPIO_Pin_3
	#define GPIO_PROX        GPIO_Pin_6

change line 51: #define NBR_OF_ADC_CHANNELS   1 to
	#define NBR_OF_ADC_CHANNELS   2

after line 55: #define CH_TEMP               ADC_Channel_16 
	#define CH_PROX               ADC_Channel_7 // MI: confirm

after line 58: volatile AdcGroup adcValues[ADC_MEAN_SIZE * 2];
	// The proximity in inches from the sensor face
	static uint32_t proxim;

after line 60: xQueueHandle      adcQueue;
	LOG_GROUP_START(adc)
	LOG_ADD(LOG_INT32, vProx, &proxim)
	LOG_GROUP_STOP(adc)

after line 128: NVIC_InitTypeDef NVIC_InitStructure;
	GPIO_InitTypeDef GPIO_InitStructure;

after line 133:  RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1 | RCC_APB2Periph_ADC2 | RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO, ENABLE);	
  //GPIO Init Strcuture for proximity sensor
  GPIO_InitStructure.GPIO_Pin = GPIO_PROX; 
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
  GPIO_Init(GPIOA, &GPIO_InitStructure);

change line 165: ADC_RegularChannelConfig(ADC1, CH_VREF, 1, ADC_SampleTime_28Cycles5);	
	ADC_RegularChannelConfig(ADC1, CH_VREF, 1, ADC_SampleTime_13Cycles5);
	ADC_RegularChannelConfig(ADC1, CH_VREF, 2, ADC_SampleTime_13Cycles5);

change line 178: ADC_RegularChannelConfig(ADC2, CH_VBAT, 1, ADC_SampleTime_28Cycles5);
	ADC_RegularChannelConfig(ADC2, CH_VBAT, 1, ADC_SampleTime_13Cycles5);
  	ADC_RegularChannelConfig(ADC2, CH_PROX, 2, ADC_SampleTime_13Cycles5);

change line 212: xTaskCreate(adcTask, ADC_TASK_NAME, ADC_TASK_STACKSIZE, NULL, ADC_TASK_PRI, NULL);
	xTaskCreate(adcTask, (const signed char * const)"ADC", configMINIMAL_STACK_SIZE, NULL, /*priority*/3, NULL);

after line: 276 pmBatteryUpdate(&adcValues);
	proxSensorUpdate(&adcValues);

add in the end
	void proxSensorUpdate(AdcGroup* adcValues)
	{
		proxim = (uint32_t) (adcConvertToVoltageFloat(adcValues->vprox.val, adcValues->vprox.vref) / PROX_CON);
	}
